
/* 2. **Create a CSS File:**
Inside the `css` folder, create a file named `styles.css`. This file will contain all your custom styles.

### Step 2: Add Custom CSS to `styles.css`

Add some custom styles to the `styles.css` file. Hereâ€™s an example to start:

```css */
/* styles.css */



/* Global Styling */
body {
    background-color: #f0f0f5; /* Soft grayish background for elegance */
    font-family: 'Poppins', sans-serif; /* Example custom font */
    color: var(--text-color);
    margin: 0;
    padding: 0;
}

.container {
    background-color: white; /* White background for content */
    border-radius: 15px;
    padding: 30px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    max-width: 1200px;
    margin: 40px auto; /* Center the container with auto margins */
}

/* Navbar Customization */
.navbar {
    background-color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.navbar-brand, .navbar-nav .nav-link {
    color: var(--text-color);
    transition: color 0.3s;
}

.navbar-nav .nav-link:hover {
    color: var(--accent-color);
}

/* Smooth transitions for card hover */
.card {
    transition: transform 0.5s ease, box-shadow 0.5s ease;
}

/* Add a slight lift effect on hover */
.card:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

/* Animate.css overrides for cleaner animations */
.animated {
    animation-duration: 1.5s !important;  /* Extend the default duration */
    animation-timing-function: ease-in-out !important;  /* Smooth easing */
    animation-fill-mode: both !important;  /* Keep animation state after completion */
}

/* Smooth fade-in effect for page load */
.fade-in {
    opacity: 0;
    animation: fadeInAnimation 2s ease-in-out forwards;
}

@keyframes fadeInAnimation {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}



/* Footer Customization */
footer {
    background-color: white;
    color: var(--secondary-color);
    padding: 20px 0;
    text-align: center;
    box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
}
